# This file configures the analyzer, which statically analyzes Dart code to
# check for errors, warnings, and lints.
#
# The issues identified by the analyzer are surfaced in the UI of Dart-enabled
# IDEs (https://dart.dev/tools#ides-and-editors). The analyzer can also be
# invoked from the command line by running `flutter analyze`.

# The following line activates a set of recommended lints for Flutter apps,
# packages, and plugins designed to encourage good coding practices.
include: package:flutter_lints/flutter.yaml

analyzer:
  plugins:
    - custom_lint
  exclude:
    - lib/**/**/*.g.dart
    - lib/**/**/*.freezed.dart

linter:
  # Lint Reference : https://dart.dev/tools/linter-rules
  rules:
    - always_declare_return_types
    - avoid_catches_without_on_clauses
    - avoid_catching_errors
    - avoid_empty_else
    - avoid_redundant_argument_values
    - avoid_type_to_string
    - camel_case_types
    - control_flow_in_finally
    - curly_braces_in_flow_control_structures
    - directives_ordering
    - discarded_futures
    - empty_statements
    - leading_newlines_in_multiline_strings
    - library_names
    # - lines_longer_than_80_chars
    - literal_only_boolean_expressions
    - no_adjacent_strings_in_list
    - no_logic_in_create_state
    - no_duplicate_case_values
    - matching_super_parameters
    - prefer_single_quotes
    - prefer_mixin
    - require_trailing_commas
    - slash_for_doc_comments
    - sort_constructors_first
    - use_enums
    - unnecessary_brace_in_string_interps
    - unnecessary_parenthesis
